version: "3"

services:
  # api-gateway:
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./apps/api-gateway
  #   container_name: api-gateway
  #   restart: unless-stopped
  #   ports:
  #     - "4000:4000"
  #   environment:
  #     - PORT=4000
  #     - DB_HOST=api_db
  #     - DB_PORT=5432
  #     - UPLOADS_DIR=uploads
  #     - DB_NAME=ms-db
  #     - DB_USERNAME=postgres
  #     - DB_PASSWORD=postgres
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - CACHE_TTL=5
  #   command: >
  #     sh -c "npm run db:init && npm run start:prod"
  #   depends_on:
  #     - api-db

  # auth-microservice:
  #   build:
  #     context: ./apps/auth-microservice
  #     dockerfile: Dockerfile
  #   container_name: auth-microservice
  #   restart: unless-stopped
  #   depends_on:
  #     - api-gateway
  #   environment:
  #     - KAFKA_BROKERS=kafka:9092

  # post-microservice:
  #   build:
  #     context: ./apps/posts-microservice
  #     dockerfile: Dockerfile
  #   container_name: post-microservice
  #   restart: unless-stopped
  #   depends_on:
  #     - api-gateway
  #   environment:
  #     - KAFKA_BROKERS=kafka:9092

  api-db:
    image: postgres:latest
    container_name: microservices-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=api-db
    volumes:
      - microservices-db-data:/var/lib/postgresql/data
    depends_on:
      - zookeeper
      - kafka

  zookeeper:
    image: zookeeper:3.4.9
    restart: unless-stopped
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./microservices-working-folder/zookeeper/data:/data
      - ./microservices-working-folder/zookeeper/datalog:/datalog

  kafka:
    image: confluentinc/cp-kafka:5.2.1
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      # KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-kafka}:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./microservices-working-folder/kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8888:8080

volumes:
  microservices-db-data:
